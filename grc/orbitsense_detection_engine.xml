<?xml version="1.0"?>
<block>
	<name>Detection Engine</name>
	<key>orbitsense_detection_engine</key>
	<category>[orbitsense]</category>
	<import>import orbitsense</import>
	<make>orbitsense.detection_engine($fft_size, $method,
		$energy_thresh_dB, $nf_est,
		$noise_floor_val, $noise_floor_time, $sampling_rate, $window,
		$num_samples, $smoothing_factor, $false_alarm, $est_snr)
	</make>

	<param>
		<name>FFT size</name>
		<key>fft_size</key>
		<value>1024</value>
		<type>int</type>
		<hide>#if int($method())==0 then 'none' else 'all'#</hide>
	</param>

	<param>
		<name>Number of samples</name>
		<key>num_samples</key>
		<value>1024</value>
		<type>int</type>
		<hide>#if int($method())==1 then 'none' else 'all'#</hide>
	</param>

	<param>
		<name>Sensing Method</name>
		<key>method</key>
		<type>enum</type>
		<hide>part</hide>
		<option>
			<name>Energy Detection</name>
			<key>0</key>
		</option>
		<option>
			<name>Covariance Based</name>
			<key>1</key>
		</option>
	</param>

	<param>
		<name>Energy Threshold (db)</name>
		<key>energy_thresh_dB</key>
		<value>2.0</value>
		<type>float</type>
		<hide>#if int($method())==0 then 'none' else 'all'#</hide>
	</param>

	<param>
		<name>Estimation of Noise Floor</name>
		<key>nf_est</key>
		<type>enum</type>
		<hide>#if int($method())==0 then 'none' else 'all'#</hide>
		<option>
			<name>No</name>
			<key>0</key>
		</option>
		<option>
			<name>Yes</name>
			<key>1</key>
		</option>
	</param>

	<param>
		<name>Noise Floor value (db)</name>
		<key>noise_floor_val</key>
		<value>-100</value>
		<type>float</type>
		<hide>#if int($nf_est())==0 and int($method())==0 then 'none' else 'all'#</hide>
	</param>

	<param>
		<name>NF estimation time (s)</name>
		<key>noise_floor_time</key>
		<value>0.1</value>
		<type>float</type>
		<hide>#if int($nf_est())==1 and int($method())==0 then 'none' else 'all'#</hide>
	</param>

	<param>
		<name>Smoothing Factor</name>
		<key>smoothing_factor</key>
		<value>1</value>
		<type>int</type>
		<hide>#if int($method())==1 then 'none' else 'all'#</hide>
	</param>

	<param>
		<name>False Alarm Probability</name>
		<key>false_alarm</key>
		<value>0.10</value>
		<type>float</type>
		<hide>#if int($method())==1 then 'none' else 'all'#</hide>
	</param>

  <param>
    <name>Estimate SNR</name>
    <key>est_snr</key>
    <value>0</value>
    <type>int</type>
    <hide>#if int($method()) == 1 the 'none' else 'all'#</hide>
  </param>

	<param>
		<name>Sampling Rate</name>
		<key>sampling_rate</key>
		<value>1e6</value>
    <type>float</type>
    <hide>#if int($method())==0 then 'none' else 'all'#</hide>
	</param>

	<param>
		<name>Window Function</name>
		<key>window</key>
		<type>enum</type>
		<hide>#if int($method())==0 then 'none' else 'all'#</hide>
		<option>
			<name>Flat top</name>
			<key>0</key>
		</option>
		<option>
			<name>Blackmann-Harris</name>
			<key>1</key>
		</option>
	</param>

	<sink>
		<name>in0</name>
		<type>complex</type>
	</sink>

	<source>
		<name>data_out</name>
		<type>message</type>
	</source>

  <doc>
Detection Engine:

Detection engine block receives a complex stream of samples and detects
whether a signal exists.
It supports two detection methods, an energy detection method, and a
covariance based method.
  
---------------------------------------------------------------------------
Energy Detection:

For the energy detection the user can specify a noise floor value or an
automatic noise floor estimation can be done. The arguments for the 
energy detection algorithm are the following

FFT Size:
The number of samples used for the FFT.

Energy Threshold (db):
The threshold between the noise floor and a sample needed to assume that
a signal exists in that fft bin.

Estimation of Noise Floor:
Boolean value. If set to yes the noise floor value will be estimated.
During the estimation no signal should be present. If set to no user can
specify the noise floor value in db.

NF Estimation time (s):
Only present if Estimation of Noise Floor is set to yes. Time that the
estimation will run. No signal must be present while the noise floor 
estimation runs.

Noise Floor Value (db):
Only present if Estimation of Noise Floor is set to no. User specifies the
noise floor value in db.

Sample Rate:
The sampling rate used.

Window Fuction:
Window function to be used.

---------------------------------------------------------------------------
Covariance Based:

For the covariance based detection the user can specify the number of samples
the algorithm is going to run, the smoothing factor which is the number of
samples that the cross-correlation will be calculated and the probability of
false alarms which is used for the calculation of a threshold to compare the
cross-correlation to auto-correlation ratio.

Number of Samples:
Number of samples used to compute covariance matrix.

Smoothing Factor:
Number of previous samples used to compute cross-correlation for the
covariance matrix. Covariance matrix has smoothing factor * smoothing
factor size.

Probability of False alarm:
Probability of False alarm.
  </doc>

</block>
