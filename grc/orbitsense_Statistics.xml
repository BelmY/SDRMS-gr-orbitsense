<?xml version="1.0"?>
<block>
  <name>Statistics</name>
  <key>orbitsense_Statistics</key>
  <category>[orbitsense]</category>
  <import>import orbitsense</import>
  <make>orbitsense.Statistics($samp_rate, $signal_on, $signal_estimation_time,\
                              $iterations, $snr_list, $export_csv,\
                              $csv_file, $export_plot, $plot_file, $modulation,\
                              $smoothing_factor, $signal_bandwidth,\
                              $false_alarm, $window_size)</make>

  <callback>self.$(id).set_signal($signal_on)</callback>
  <callback>self.$(id).open($file)</callback>
					
	<!-- Make one 'param' node for every Parameter you want settable from the GUI.
       Sub-nodes:
       * name
       * key (makes the value accessible as $keyname, e.g. in the make node)
       * type -->
  <param>
    <name>Sampling Rate</name>
    <key>samp_rate</key>
    <type>real</type>
  </param>

	<param>
		<name>Signal On</name>
		<key>signal_on</key>
		<type>int</type>
	</param>

	<param>
		<name>Signal estimation time (s)</name>
		<key>signal_estimation_time</key>
		<type>real</type>
	</param>

	<param>
		<name>Iterations</name>
		<key>iterations</key>
		<type>int</type>
  </param>

  <param>
    <name>SNR List</name>
    <key>snr_list</key>
    <type>real_vector</type>
  </param>

  <param>
    <name>Export CSV</name>
    <key>export_csv</key>
    <type>enum</type>
    <hide>part</hide>
    <option>
      <name>No</name>
      <key>False</key>
    </option>
    <option>
      <name>Yes</name>
      <key>True</key>
    </option>
    <tab>Plots &amp; Statistics</tab>
  </param>

  <param>
    <name>CSV File</name>
    <key>csv_file</key>
    <value></value>
    <type>file_open</type>
    <hide>#if $export_csv() == 'True' then 'part' else 'all'#</hide>
    <tab>Plots &amp; Statistics</tab>
  </param>

  <param>
    <name>Export Plot</name>
    <key>export_plot</key>
    <type>enum</type>
    <hide>part</hide>
    <option>
      <name>No</name>
      <key>False</key>
    </option>
    <option>
      <name>Yes</name>
      <key>True</key>
    </option>
    <tab>Plots &amp; Statistics</tab>
  </param>

  <param>
    <name>Plot File</name>
    <key>plot_file</key>
    <value></value>
    <type>file_open</type>
    <hide>#if $export_plot() == 'True' then 'part' else 'all'#</hide>
    <tab>Plots &amp; Statistics</tab>
  </param>

  <param>
    <name>Modulation</name>
    <key>modulation</key>
    <type>raw</type>
    <hide>part</hide> 
    <tab>Plots &amp; Statistics</tab>
  </param>

  <param>
    <name>Smoothing Factor</name>
    <key>smoothing_factor</key>
    <value>""</value>
    <type>raw</type>
    <hide>#if $export_plot() == 'True' then 'part' else 'all'#</hide>
    <tab>Plots &amp; Statistics</tab>
  </param>

  <param>
    <name>Signal Bandwidth</name>
    <key>signal_bandwidth</key>
    <value>""</value>
    <type>raw</type>
    <hide>#if $export_plot() == 'True' then 'part' else 'all'#</hide>
    <tab>Plots &amp; Statistics</tab>
  </param>

  <param>
    <name>False Alarm Probability</name>
    <key>false_alarm</key>
    <value>""</value>
    <type>raw</type>
    <hide>#if $export_plot() == 'True' then 'part' else 'all'#</hide>
    <tab>Plots &amp; Statistics</tab>
  </param>

  <param>
    <name>Window Size</name>
    <key>window_size</key>
    <value>""</value>
    <type>raw</type>
    <hide>#if $export_plot() == 'True' then 'part' else 'all'#</hide>
    <tab>Plots &amp; Statistics</tab>
  </param>

  <!-- Make one 'sink' node per input. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <sink>
    <name>in</name>
    <type>complex<!-- e.g. int, float, complex, byte, short, xxx_vector, ...--></type>
  </sink>

	<sink>
		<name>data_in</name>
		<type>message</type>
		<optional>1</optional>
	</sink>

  <!-- Make one 'source' node per output. Sub-nodes:
       * name (an identifier for the GUI)
       * type
       * vlen
       * optional (set to 1 for optional inputs) -->
  <source>
    <name>out</name>
    <type>complex<!-- e.g. int, float, complex, byte, short, xxx_vector, ...--></type>
  </source>

</block>
